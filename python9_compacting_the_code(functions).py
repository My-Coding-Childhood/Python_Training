# -*- coding: utf-8 -*-
"""Python9_Compacting_the_code(Functions)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B7IGq_AFaP7L3fuBVWURPeKpOmiAtZjr
"""

### Functions are the reusable parts or chunks of code, 
    #it is meant to perform a specific task,
    #function is marked by keyword "def" (defining a function) and a function name,
    #it is usually writte at the top of the script
    #can be called using the function name at any point in the main point in the main code,
    #a function accepts parameters, whose values are passed as arguments in the function call in the main program,
    #a function may return a value,
    #as the code grows bigger and complex, functions help to keep the code organized, compact and error free.
## A well written code has the following features:
#1 Compact
#2 Non-repititive
#3 Error free
## Functions have 4 components: definition, parameters, call and arguments...

# Function definition
def even_odd(number) :
  if number%2==0:
    return("Even")
  else:
    return("Odd")

# Main program
input1=int(input("Input any number "))

# Function call
result = even_odd(input1)
print(result)

# function definition
def composition(sequence) :
  nucleotides = ["A","T","G","C"]
  for i in nucleotides:
    count1=sequence.count(i)
    print(i, count1)

dna=input("Submit the dna sequence ")
#function call
composition(dna)